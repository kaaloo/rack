// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5b\x7b\x6f\xdb\xc8\x11\xff\x3f\x9f\x62\xb1\xc8\x1f\xed\x41\x56\xec\x04\x97\xb6\x42\x5b\xc0\x91\x9d\x44\x8d\xed\xb8\x92\x93\x43\x1b\x18\x07\x9a\x5a\x59\xac\x29\x2e\x8f\x0f\x5f\x14\x43\xdf\xbd\xb3\x2f\xee\x93\x22\x2d\xdb\x41\x5a\xdf\x9d\xcf\xe2\x0e\x77\x67\x67\x66\x67\x7e\x33\x3b\xba\xbb\x43\x73\xb2\x48\x32\x82\x70\x94\xe7\x18\x6d\x36\xcf\x10\xba\x83\xff\x10\xc2\x87\xbf\xcc\x2e\xc8\x2a\x4f\xa3\x8a\xbc\xa5\xc5\x2a\xaa\x3e\x93\xa2\x4c\x68\x86\xd1\x08\xe1\x97\xfb\x07\xfb\x7b\xfb\x7f\x81\x7f\xf1\x40\x90\x8f\x69\x36\x4f\x2a\x18\x2f\xf1\x48\x4e\x01\x53\xdd\xa1\x4a\xce\x81\xf0\x55\x94\x46\x59\x4c\x8a\xbd\x58\x93\xa2\xa1\x58\xd3\x23\xce\x0b\x1a\x93\xb2\xec\x45\x5b\x90\xeb\xa4\xac\x8a\x75\x1b\x31\x3e\x2f\x92\x5b\xa0\x64\x8c\x21\xfc\x36\x1b\x8d\x8e\x7f\xab\xa3\x94\x31\xfa\x85\x3d\x99\x92\x05\xfc\xd9\x50\xa1\xcd\x00\xe1\x7f\x11\x98\xe3\x12\x89\x29\x36\x72\x8f\xe7\x51\x11\xad\x48\x05\x72\x60\x42\xd8\xbe\xc9\x9c\xd1\xf6\xd8\xa0\x45\xa7\x18\x1e\xa7\x75\x09\xcb\x18\x92\x84\x87\x17\xeb\x9c\x70\xe1\xcf\xaa\x22\xc9\xae\xa5\xe0\xf9\xd0\x11\x59\x44\x75\x5a\xf1\x51\xfb\x79\x19\x17\x49\x5e\x29\xb5\x61\x39\xb4\x19\x34\x2b\xe5\x75\x60\x15\x20\x3d\xab\x57\x57\xc0\x41\x60\x11\xae\xfe\xfd\xb6\x65\x60\x74\x7c\xfe\x09\x95\xcb\xa8\x20\x25\xa2\x0b\x44\xa2\x78\x89\xe4\x6e\xfd\xf5\x8f\xb3\xdb\xa4\xa0\xd9\x8a\x64\x55\x98\x8f\xf6\xcd\x6e\xd9\x6b\x70\xab\x1f\xc8\xfa\xa9\x97\x30\x0c\xad\xdf\x32\xb6\xdc\x0a\xc2\x4c\x23\xc9\x40\xf5\x59\x94\xa2\x94\x46\x73\xa4\x0c\xaa\x84\xe7\x20\x46\x3e\x3f\x2a\xeb\xab\x8c\x54\x65\x0b\xcb\x67\xd4\x1c\x38\x4c\x53\xfa\x3b\x99\x7f\x8e\xd2\x9a\x08\x93\xe7\xc6\x3d\xe0\x74\xe8\xd2\xdb\xc3\x94\xa4\x24\x2a\x43\x7b\x78\x6c\xdb\x9b\x92\x9c\x96\x49\x45\x8b\x90\x5e\x1e\xb6\xd8\x8c\xd6\x45\x4c\x50\x4c\xe7\x04\x15\x7a\x19\x8f\x85\x99\x14\x64\x78\xfd\x13\x70\x2b\x7f\x05\x3f\x08\x0e\x63\xfc\x72\x34\x12\xc4\xa3\xd1\x64\xfe\xf7\x5d\x78\xfa\x7c\x3e\x56\x8a\x43\x0b\x5a\xa0\x6a\x99\x94\x88\xb9\xdd\x36\xae\xda\xad\xe9\x69\x98\x73\xac\xab\x83\x49\x15\x0e\x2c\xee\x1c\x8b\xfe\xc3\xf4\xf8\x9f\x9f\x26\xd3\xe3\xa3\x3f\xa2\x93\x68\x75\x35\x8f\xd0\x18\x1c\x1b\x5d\x5d\xd0\x3c\x89\xd1\xfb\x28\x9b\xa7\xa4\x40\xd2\xe2\x90\x9a\xd1\x60\xf3\x34\xc9\x4e\x48\x76\x5d\x2d\x39\x93\x07\xe6\x90\x73\xac\x7c\xfe\xce\xc7\x2d\x92\xd3\x42\x03\x1a\x26\xb1\x5d\x05\x16\x14\x90\x15\x31\xa6\xa4\xe4\x96\x68\x5a\x18\x36\x64\x30\xa5\x69\x8b\xb7\xe0\x4c\x4e\x0e\x4f\x47\x23\x4e\x63\x70\x72\x5e\xd0\x9c\x14\x55\x42\x6c\xb3\x65\x47\xbd\x2c\xeb\x15\x61\xf4\xe7\x34\x4d\xe2\xf5\x11\x8d\x6b\xcf\xb3\x3a\xca\x63\xa1\xfc\xe5\x1e\x44\xf3\x83\x3f\x19\x8b\x08\x33\xac\xc0\x1a\xe4\xfb\x5f\xac\x21\xe4\xcc\xc7\xc9\x8f\x17\x0b\x12\x73\x07\xc4\x5d\x8e\x33\x9b\x64\x3d\xc9\xe2\x24\x8f\x52\x11\x8a\x67\xa4\xb8\x4d\x62\x22\x9c\x52\xca\x0d\x64\x18\xad\xa2\x6f\x34\x8b\x7e\x2f\x87\x31\x5d\xf1\x10\x1c\x98\xe7\x30\x96\x16\x06\xef\x95\x55\x39\xd2\x1b\xd7\x1e\x4d\xfd\x6c\xac\xcf\xe6\xa8\x35\x33\x04\x77\xb0\x32\x60\xfe\x05\xb6\x1f\x33\x49\x0a\x59\xdb\x32\x70\x25\x20\x28\xd7\x67\x80\x10\xb8\x0c\xe6\xab\x24\x63\xb0\x24\x02\xcf\xe3\xc9\x02\x77\x28\x88\xd3\xf4\x51\x12\x27\xb4\x14\xc5\x04\xeb\xa9\xc2\x10\x19\xfe\x89\x7d\x54\x86\x29\x1e\xa0\x4d\x87\xd8\xcc\x4f\x9a\x72\xe3\xc3\x09\x6d\xda\x5b\xcc\x5a\xf8\x82\xd1\xe8\x6d\x9d\x09\xae\x7a\x59\xf7\x18\x9c\xb9\x6f\xc9\xb3\x57\x6f\xea\xf8\x86\x54\x1a\xdc\xfd\x83\x26\xd2\x34\xf6\x60\xa7\xf0\x3f\x80\x85\xb7\xf4\x2b\xfc\xad\xb1\x1e\x67\x63\x0a\xb8\x91\x9d\x66\xd8\xbc\x6f\x67\x30\xb1\x04\x0c\xee\xac\x62\xd2\x42\x38\xad\x17\xd6\xb4\x0d\x44\x66\x10\xf2\xc5\x82\xc3\x66\xf8\x3c\xfc\x96\xe4\x58\x2c\xd2\x6a\x7e\xd2\x19\xb2\x59\xe4\x49\x20\x5f\x05\x0e\xb0\xed\xf1\x94\xac\x20\x92\xcd\x92\x6f\x5c\x9c\x07\x2f\xff\x6c\x0f\x2b\x87\x22\x98\x7e\x47\xaa\xc3\x4a\x58\x85\xe7\x75\x98\x4d\x14\x99\x77\xc2\xf0\xb4\xce\xaa\x44\xd8\x70\x06\x12\xff\x4f\x69\x2f\x70\x01\x63\xb4\xe6\xb6\xf5\x6a\x1f\xb7\x9b\x42\x18\x15\x17\x8d\x3f\xec\x04\xc6\xf7\x20\x2d\x85\x1f\xe9\x93\x22\xb8\xb3\x86\x88\x4b\x12\xd7\x45\x52\xad\x71\xcb\x64\x65\x25\xd2\x04\xdb\xd5\x7f\xac\xab\xbc\xae\xba\xb3\x1f\x2a\xe9\x3a\x77\xd5\x49\xd8\x6c\xca\xa6\x6c\x50\x04\xa9\x2a\x88\x8c\x0e\xb8\xe1\x38\x50\x58\x88\x34\xda\x86\x4e\x2b\xf1\x99\xfa\xbd\x79\x06\x2b\x92\x6c\xce\xe7\x35\xb2\xc5\x50\x7a\x26\x92\xc7\x3b\x54\x44\xd9\x35\x41\xcf\x6f\xd0\xe8\x6f\x68\x78\x9c\x01\x83\xcc\x27\x96\x6a\x13\xf8\x0d\x08\xe2\x06\xe8\xea\x1c\x0e\x3a\xa3\xdb\x6c\x74\x20\xf0\x13\x34\x76\xde\x70\x63\xa6\x9a\x9d\xed\x8c\xa9\xb4\xca\x61\x8a\x70\xa6\x1a\x56\x34\x17\x64\xc8\x98\x84\x01\x71\xbe\xcc\x70\xdd\x92\x11\x59\xf9\xd0\xcf\xaf\xcd\xe7\x16\x06\x3a\x7d\xc3\xb2\xa0\xe9\xe1\x29\xaa\x28\x60\x51\x66\xab\x04\x5b\x96\x13\xe0\x02\xe6\x48\x0a\x32\x1f\xd3\xda\x0a\x0e\x1a\xc3\xb4\x31\x63\xc3\x24\x0f\xb5\x5c\x2c\x09\xca\xf8\xab\x8c\xa9\x24\x03\x53\x86\xd3\xce\x9d\x14\x4f\xd6\x2a\x18\x97\x22\x64\xec\x82\xa1\x01\x8a\x06\xcf\x84\x6e\x08\xc9\x51\x51\x67\x19\x58\x0a\xa2\x19\x5a\xc3\x29\x42\xb1\x4c\x53\xf5\x6e\xfa\xaa\xa7\xb1\x58\xae\x09\xfc\x01\x06\xcb\x44\x5b\x6a\xc0\x4a\x15\x89\x30\x4b\xb6\x16\x3e\xa1\xd7\xef\x0a\x5a\xe7\xdb\x5e\x6b\x68\xd4\x7b\xdb\xf9\x32\xdc\x43\x0b\x67\x56\x20\x93\xa3\x80\xbe\x2b\xc8\xdd\x56\xaa\x16\x12\x8c\x61\x78\x06\x29\x71\xa3\xd1\x03\x7d\xc4\x5a\xf6\x62\x47\x4c\x7a\x5d\xf2\xdf\x82\xa8\xcf\x56\xb4\x53\x54\x67\xe0\xf9\x2a\xca\x92\x05\x29\x2b\xe3\x10\xc0\xe3\x64\x81\x86\xef\x23\xc8\x36\xf8\x7b\xfa\xa0\xb6\x9d\x9a\xb0\xc5\x1e\x8f\x67\x17\x51\x79\x73\xc4\xb8\x48\xaa\x40\x62\x90\x03\xaf\xe5\x47\x1e\x43\x2d\x98\x30\x68\x70\x20\x0f\x4b\x97\x01\x88\x2f\xc8\x19\x66\x77\xd7\x30\x88\x0d\xb4\x74\x30\xdc\xef\x07\x29\xe4\xc2\x17\xf4\x86\x64\x9d\x51\xb3\x35\x62\x4a\xc8\xd7\x02\x3f\x1c\xd0\x01\x58\x2d\xbe\xe1\x6f\x70\x90\xc0\xd4\xd2\xc8\x10\xfb\x40\xc4\x4c\xc7\x9b\x89\xd4\x33\x87\xd4\xa9\xa5\x34\xe4\xe6\x73\xe7\x95\x06\xe2\xa8\x53\x46\xd6\x2e\x09\x93\xb8\x2c\x95\x99\xc1\x87\x30\xc7\xfe\x6b\x05\x83\x22\xec\x6c\x85\x85\x61\x7b\x31\xbc\x7e\x8b\xa1\x18\x7c\x08\x43\x85\xf7\xc1\x54\xdf\xc8\x58\xaa\x2d\x52\xaf\xd3\x18\xf9\x50\x51\x29\xa8\xcb\x17\x36\x84\x3d\xb0\x67\x97\x47\xc9\x98\xcd\xd2\x7d\xc0\x6c\xb8\xbd\xea\xe7\x1d\x96\xab\x76\xfb\x43\x98\xac\x51\x60\x6c\x74\xaf\x9e\x39\xa4\x6e\x28\x6a\xe8\xbb\xc2\xd6\xf7\x3c\x25\xbe\xeb\xd9\xc6\xa6\xef\x47\xdc\x43\xd7\xa0\xe8\x06\x23\x69\x8d\x3b\xb4\x27\x34\x9a\x2b\x53\x0b\x64\x89\xda\x89\x0e\xcf\x69\x51\x9d\x46\x79\xce\xc0\x96\x6b\xba\xc8\x17\xcc\xc8\x11\xcc\xbd\x8c\x3b\x20\x36\xf1\x60\x38\xa6\x59\x15\x41\xa4\x28\xc2\xa2\x0c\x9f\x05\xe4\x2a\xe8\x8c\x8a\x58\xdb\x2f\x33\x34\xa7\xec\x82\x08\xc1\x6b\x02\x1b\xc6\x35\xbb\x37\x63\xd5\x73\xf5\xa2\x15\xac\xf4\x3b\x61\xe9\xbb\x68\x54\x4d\x32\x94\xe1\x50\x0a\x8f\xbd\xcc\x84\x67\x78\x9e\x31\x3b\x9f\x8b\x24\xee\xbe\x58\x78\xe8\xec\x5c\x97\xd6\x19\x06\x7b\x84\x14\x85\xec\x32\xf1\x13\xf0\x2a\x98\xb1\xef\x4d\x8c\x92\x38\xfd\xba\x86\x5f\x15\x8d\x69\xfa\x83\x30\x6c\xf1\x24\xf8\xe6\xb5\xf0\x07\x99\x6b\x38\xe3\x78\x4c\x53\xdd\x65\xab\xea\xcf\x9d\x2a\xec\xae\x26\xee\x55\xdd\x7f\x84\x33\x75\x6f\x86\x9f\x9e\xc3\xf7\xb4\x0c\x5d\x54\xf5\x92\x65\x92\xcd\xc9\x57\x63\xb1\x29\x24\x56\x74\x55\x7e\x67\x19\xcb\xd3\xba\xcb\x1e\xec\x8b\x25\x8f\xbd\x07\x5c\x3a\x3d\xfc\x14\xff\x40\xfb\xd9\xc9\x7d\xd8\x19\xf1\x2e\xfe\x03\x2b\xd2\x46\x98\x8e\x0c\x1d\xdb\x35\xb3\x65\x17\x43\x32\x51\x5b\xd0\x42\xe0\x87\xa3\xb3\x99\x00\x65\xce\xcd\xf8\x77\x74\x5d\x7e\x8a\xff\xa0\xb9\xb7\x26\x2b\xf7\x9f\x4f\x81\xdc\x00\xbf\x86\xda\x86\x26\x66\x94\x93\x3e\x82\x09\xb9\xc5\x8b\x9d\x8c\x28\xa0\xf9\x99\xac\x87\xda\x05\x0a\xb7\x44\x21\x6e\x21\x2d\x52\x13\x04\x84\xd2\x19\xcc\xc9\xec\x7a\x99\x07\x83\x51\x8f\xfc\x60\xef\xaa\xd1\xa7\x03\x68\xb1\xc5\xd1\x24\xbb\x2e\x58\x1b\x82\x97\x5a\x6e\xb5\x5e\x49\xe5\xe0\x75\x3c\x4e\xe6\xc5\x84\xc9\x03\xef\x0f\xf9\x3f\x2f\xf6\xfd\x7b\x9e\x49\x6e\x78\x28\x5c\xc5\xb9\x4f\xf2\xb6\xa0\x2b\xb6\xf0\x63\x1a\xb5\xb7\xc8\x05\x7d\xec\x25\xac\x15\x36\x5d\xc9\x74\x77\xfa\x60\xa6\xcf\x9f\xf3\x78\x32\xb7\x98\x65\xb7\xb9\x6e\x7d\x7a\xd0\x6a\xb1\xed\x46\x9a\x46\x65\x95\xc4\xfa\xfc\x81\xa6\x59\x5d\x4d\x1f\x47\xb3\x76\x6a\x54\x22\x7a\x1c\x0c\xbd\x83\x36\x7b\x17\x35\x0c\xf2\x1b\x1a\xce\xe2\x25\x81\x29\xb0\xea\xf5\xc0\x4e\xe9\x41\x8c\x4b\x2d\x29\x6a\xa7\x66\x61\x36\x2f\x88\x43\x33\x59\x08\x56\x55\xe3\xc0\xa0\x25\x83\x73\xfa\x0b\xbc\x04\xd0\x25\x74\xb2\x3c\x93\x9e\xe9\x3a\x2d\x89\xcb\xbe\xc9\x99\x37\x97\xfd\xb6\x6d\x29\xac\x8f\x2c\x23\xfc\x56\xf0\xa8\x80\x34\x15\xf4\x23\xae\x4a\xc5\x5c\xc7\x59\x74\x95\x12\x66\x1a\x55\x51\x93\x81\x79\x1d\xf5\x7a\xdf\x3a\xf7\x7a\x1e\xf3\x1e\x04\x0e\xe4\x3c\x25\xfa\xa5\x57\xaf\xf7\x9d\xd7\x0a\x5a\x96\xff\xa6\x19\x51\x4b\xe8\xa1\xf7\x24\x4a\xab\xe5\x78\x49\xe2\x1b\xb7\x28\x23\x86\xd6\x17\x4b\xf0\x2e\x4b\x9a\xce\xf9\x9d\x80\xad\xac\x09\xd3\xf4\x2d\xbf\xf9\xfe\xd9\x29\x5d\x14\xd7\xe1\xeb\x4b\x51\x00\xc0\x17\xe3\x73\xeb\x92\xb1\x2d\xbc\xab\xe3\xfa\x36\x29\xca\x8a\x7d\x50\x21\x3f\x74\xc1\x69\x08\xee\x95\xf5\xfc\x53\xb6\x0c\x6e\x46\xa7\xf6\x86\x48\x58\x0f\x0a\xc9\xfc\xba\x47\x4f\x8f\x6a\x5b\xed\xa3\x64\xe2\xae\xe3\x0b\x5c\xab\x9b\x0e\x99\xcb\xd6\x27\x31\x1d\xc2\x53\xbb\x66\x6e\x1b\xec\x1e\x26\x26\x3d\x38\x6b\x48\x1f\x83\x2b\x69\x1d\xce\x2a\x1e\x87\x8e\x9e\x1e\x50\x7b\xf0\x37\xe4\xeb\xc7\xd1\xd0\x6c\x76\x12\x78\xed\xbb\xeb\xa8\x45\x4b\xad\xdc\x3d\x85\x9e\x82\x0b\x01\x07\x86\xfd\x3b\x51\xf3\xe1\x95\x27\x6f\xc9\x00\x17\xff\xe3\x3a\x0c\x9f\xb4\xff\x6b\x1d\x3a\x4f\x2e\xdd\x26\xa9\x47\xc6\x73\xfa\x92\x51\x2b\x5b\x74\x55\x39\xb8\x61\xd7\x66\x2b\x01\x0b\xec\x82\x40\x4b\xcb\x95\x82\x83\x16\xb1\x31\xe4\xbd\x06\x39\x71\x91\x5c\xd5\x95\xe0\x2a\x68\xeb\x8a\x8d\xed\x0c\x70\x52\x95\x0e\x62\x06\x2e\xb0\xeb\x79\x2f\xfd\xfc\xc1\xb0\x41\x5f\x2c\x52\xb8\x3d\x62\xad\xa4\x75\x71\xe2\x43\x6b\xb3\xa1\x3d\xa2\x27\xca\x31\xc4\x4f\xb0\x21\x30\x7c\x65\x61\xb0\x82\xb6\xde\x5b\xf0\x79\xed\x7c\xc6\xc4\xbb\x5b\xf1\xea\xc9\x9b\x31\xa5\x37\x09\x99\x41\x5a\x71\xc3\xda\x01\xca\x06\xaf\x7e\xb9\x73\xed\x34\x5a\xf0\x1b\x27\x76\xc7\x6a\xa6\x3b\x6e\x39\x40\x94\x0b\x42\x55\x82\xb6\xc4\x36\x50\x15\xef\x48\x56\x36\x6e\xd5\xaa\x57\xff\x46\xf0\xab\x16\xa2\x53\x42\x74\xd3\xc1\x19\x9f\x4a\x9a\x8e\xc2\xbd\xdd\x82\x07\x50\xbe\x2e\xf7\x08\x64\x67\x7b\x07\x90\x49\xb5\x76\x37\x84\x1a\xb9\xf4\xfa\x6c\x24\xd0\x55\x1e\xb8\x8e\x9d\x1a\x64\x32\x8f\x6c\xbe\xc1\x82\x47\xa1\xdd\x48\xaa\xe0\x9d\x6d\x5b\xc7\xc7\x43\xef\x6a\x8d\x4b\xd3\xb6\xea\xc7\x33\x65\xae\xdd\x22\x73\x9a\x6e\xd4\xce\x44\xbc\xb9\x97\x0c\xbc\x1a\x1c\x67\xeb\x30\x8e\xd9\xc5\x2f\xcc\x67\x34\xb6\x6c\x53\xcb\xbd\x57\x73\xc5\x17\x98\x7c\x60\x7e\xaf\xc0\x2c\x56\xb6\xca\xc7\x69\xf7\xb3\xee\x7a\xc3\xdd\x38\x6e\x5b\x76\x8b\xfa\x7b\xb5\x63\xb7\x76\x59\x3b\x7d\xae\xba\xe5\xd9\x0d\x11\x4e\x03\xb4\x1d\xc9\x9d\xa6\xd6\xed\x3d\xda\x76\x7f\xb6\xbb\x8e\xd1\xad\xed\xe7\x25\x24\x2e\x9d\xd6\xed\xde\xfe\xb5\xa5\x04\x14\x6c\x7e\xb6\x5d\x16\x0a\x75\x6d\x87\x41\xc4\x9d\x07\x33\x1a\xa7\x6c\xea\x7b\xe0\x93\xb5\x37\xd1\x3f\x7e\x7f\x7c\xab\x92\xf9\x28\x11\xc5\x2b\xf6\xb5\xa0\xab\xa6\x78\x25\xaa\xa7\x57\xe4\xa7\x30\xde\x68\x79\x47\xf8\x04\x52\x28\x78\x51\xb2\x22\x64\xb0\x0c\xd6\x3d\xdb\xd4\x9d\xeb\x97\xa4\x5a\xf6\x98\x2b\x7e\xd9\xc9\x3c\x90\x1c\xd6\xd5\x92\x16\xc9\x37\x12\x2c\xe4\x7a\x6f\x79\x08\x0a\x59\xbd\xee\x41\xb9\xfe\x14\x98\xc6\x45\x66\xcf\xda\x46\xf5\x88\xfa\xeb\xb2\xdb\x25\x9b\xcd\x53\x2c\xd6\x6e\x2b\x84\x0c\x9b\xf8\xad\xfb\x87\xa4\x53\x52\x16\xcc\xa2\xbd\xdd\xd5\x84\x27\xab\xe8\xba\x19\xe3\x1f\x8c\xc1\x31\x5d\xad\xa2\x6c\x2e\x60\xc6\x2d\x73\xaf\xac\x2d\x84\x3f\x13\x17\x66\x0d\xd2\xc0\xba\x1d\x36\x50\x7f\xb2\x5b\x66\x9b\x82\x6c\xf8\x3b\x7d\x77\xba\x33\x98\xac\x07\xe8\xb9\x58\x57\xf4\x08\xdf\x02\x6c\xb5\x50\x15\xbb\x9f\x00\x32\x59\xca\x55\x4c\xca\x77\x36\x66\x93\xb9\x85\xc7\xda\xd7\x38\x49\xb2\x9b\xcf\x51\x51\x6e\x5d\xa5\x73\x7e\xfc\x61\x72\x76\x3c\x9b\xcc\x70\xb8\x33\xb5\x71\x41\x27\x1f\xdf\xfd\xfa\x6e\xfa\xf1\xd3\x39\x6e\xe9\x45\xd5\xce\x6a\xfa\x71\x7c\x3c\x9b\xb9\x5a\xd4\x88\x8c\xb9\x42\x9a\x82\x07\x32\xfd\x99\xc6\xfc\xa7\x2c\xe2\xb2\xe4\x47\x12\xb9\xfb\x1b\x9a\x28\xdd\x13\xd7\x76\x70\x2c\xcf\x92\x72\x90\x16\x03\xfd\xde\x34\x33\x12\x9b\x7d\xaf\xa7\xb4\x3b\x8d\x09\xd7\x47\x83\x39\xe9\x9d\xdf\xf3\xd5\x2f\x25\xf7\x3b\xa4\x74\x70\x32\x81\xd9\x8e\x92\x64\x15\xf7\x24\x25\xd7\xbc\x82\xcd\xd7\xd2\x4f\xe4\x62\x02\x86\xb7\x4e\x07\xde\xa5\x0d\x9b\x9b\x5f\x4b\xf0\x9b\xff\x6d\x04\x33\x7b\x35\x1a\xc9\xef\xcd\x48\xd6\x8e\x48\x4a\x58\xf0\x69\xb2\x17\xe0\x80\x49\xa1\x03\xe2\xc4\x2c\x97\x63\x02\x2b\x44\x31\xc5\xbd\x7a\xc0\x17\xd1\xb5\x13\x89\x55\xd7\x29\x2e\xd7\x10\x36\x56\x0c\xb1\x35\x59\xb1\xfc\xaa\x8e\x75\x47\xd0\xd0\xb3\x6f\xd9\x0d\x5a\xd1\xa7\x09\x8a\x43\xbe\xd8\x90\xda\x7f\x03\x00\x00\xff\xff\x66\x54\xb8\xc9\xf7\x3e\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 16119, mode: os.FileMode(436), modTime: time.Unix(1457364648, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x6d\x6f\xda\x3a\x14\xfe\xce\xaf\xb0\xfc\xe9\x5e\x89\xcb\xa5\x54\xaa\xb4\x68\x9a\x44\x81\x56\x91\xd6\x0e\x15\xd6\x49\x9b\xfa\xc1\x24\x07\x64\xcd\xd8\x9e\xed\x74\xa2\x15\xff\x7d\xc7\x21\x09\x31\x09\xf4\x45\x5a\x5f\x50\xc8\x39\xcf\x39\xcf\x79\xb5\x9f\x9f\x49\x0a\x4b\x2e\x81\x50\x0b\xe6\x91\x27\x40\xc9\x76\xdb\x21\xe4\x19\xff\x09\xa1\xc3\x6f\xb3\x39\xac\xb5\x60\x0e\xae\x94\x59\x33\x77\x0f\xc6\x72\x25\x29\x89\x08\x1d\xf4\xcf\xfa\xff\xf5\x3f\xe0\x1f\xed\xee\xd4\xa7\xcc\xb0\x35\x38\xd4\xa1\x51\x61\xc2\x1b\x11\x42\x25\x68\x21\x9d\x39\x65\xd8\x0a\x6a\x32\x94\xce\x37\x1a\x72\x73\xb7\xd9\x7a\x01\xa6\x30\x95\x8b\xc6\xb0\x64\x99\x70\xb9\xf4\xac\x1f\x4a\x6c\x62\xb8\x76\x25\x95\xca\x05\xb1\x3b\x1f\xc4\xf2\x27\x20\xff\x5c\x5f\xfe\x4b\x0b\xd4\xb6\x84\xd3\x31\x73\x6c\xc1\xec\x31\x1e\x33\x67\xb8\x5c\x1d\xe3\xc1\xb4\x3e\x45\xa4\x50\x25\x69\xe1\x83\x48\x4c\x48\x93\x42\x2c\xad\x63\x32\x81\xdc\xe9\x7b\x68\xa4\x8b\x9e\x1b\xf4\xd6\x3c\x31\xea\x14\x9d\xd2\x0f\x49\x04\xb3\x96\x2c\x95\xa9\x31\x53\x29\xd8\x26\xb5\x1b\x74\xc1\x87\xdf\xdf\xc5\x6a\xc9\x04\xa6\xf5\x04\x9f\xdc\xb8\x16\x40\xd8\x23\xe3\x82\x2d\xb8\xe0\x6e\x43\x9e\x94\x6c\xc9\xd1\x14\x19\xff\x56\x26\x7d\x03\x93\xd0\xd9\x0c\x3b\x1a\x0c\xd1\xa5\x9d\x86\x87\x59\xb6\x90\xe0\x6c\x8b\x03\x44\x7f\xe6\xd6\x7d\xc4\xfe\x8f\xa2\xc9\x68\x10\x45\x3b\xdd\x28\x8a\xd3\x4f\xc7\x7c\x22\xe8\x7e\x3a\x22\xb6\xb0\xda\x70\xf7\x15\x47\x2c\x6f\x87\xbf\xd0\x77\x45\xac\x59\xe9\xa2\xe1\xfc\x5e\x27\xed\x71\xee\x43\x44\xf2\x3e\xbe\xd3\xe1\x55\x96\x3b\x35\xfb\xf4\x4b\xe6\x74\x16\x64\x92\x4e\x95\x71\xe7\xe7\xfd\x8b\x79\xa2\x87\x69\x6a\xbc\x08\x0d\x30\x91\xc1\xee\xf1\x4a\x46\xd1\x35\xb8\xa1\x73\xf8\xfd\xc7\xbe\x55\x69\x97\xd0\x89\x4c\xb5\xe2\xd2\xf5\x3c\x12\xac\xa5\xe4\x81\x6c\xeb\xad\xb1\xb7\xed\x1f\xdf\x67\x3b\x47\x1e\x18\x9e\xc8\xc7\x9b\x8d\xfd\x25\xea\x2b\x22\xb0\x7c\x07\x4b\x9f\x88\x4a\xde\x8a\xae\x77\x6e\x1b\xba\x92\xb7\xa2\xeb\x6d\xd2\x86\xae\xe4\x1e\x1d\x54\xe1\x0e\xac\xca\x4c\x02\x41\x1d\x66\x90\x64\x06\xa7\xec\xda\xa8\x4c\xbf\xd4\x02\xa1\x72\xad\x11\xa6\x46\x69\x30\x8e\x43\x38\x2d\x28\xc9\x55\x0f\xfa\x64\xed\xe3\x20\xe5\x89\xd2\xad\xab\x07\x1e\x62\xb9\xca\xcb\x8b\x45\xaa\xe9\x10\x1f\x6c\xac\xd1\xa5\x53\x89\x12\xde\xa0\x4b\xb4\xaf\xdd\x95\x51\xeb\xa2\xe0\xd4\xd7\xdf\xbf\x9b\xab\xc3\x37\x23\x9e\x9a\xd8\x87\x8a\x87\x46\x2f\xff\xfd\xff\xec\x82\x16\xb9\xda\xfd\x3c\x04\x9c\x70\x36\xe2\x34\xc8\xb1\x9f\x96\x1a\x60\x7b\x64\x75\xbc\x94\xd3\xbb\x31\x7e\x8c\x2f\xeb\xca\xaf\xca\x69\x00\x79\x43\x6e\x73\x50\x9c\xda\x20\x96\x72\xcb\x9d\x8c\xa7\x9a\x90\x17\x83\xd9\xcf\xd2\x6b\x22\x69\x3b\xfb\x2b\x66\x0d\xe1\x9e\x50\x91\x86\xd2\xd9\xc8\x1f\x5f\x01\x36\x38\x41\x8f\xe2\xe2\x14\xa4\xe3\x4b\x0e\x26\x74\xec\xe3\x99\x39\x96\xfc\xbc\xdd\x0d\xd2\x01\xfc\xb6\x1a\xbf\xe6\xbc\x77\x8f\x16\xaa\x81\xaa\xd7\xfd\x00\x38\x91\x2b\xbc\x75\x55\xf5\x0c\xeb\x78\xc3\x2c\xde\xa1\xc2\x3d\xd0\x1c\xfe\x23\x90\x70\xf9\x34\x37\x4e\x08\xdb\x1f\xf6\x95\x6e\xf9\xee\x40\x35\x9c\xb2\x40\x92\x2d\x04\x4f\xc4\x66\x98\xe0\xea\xb1\x7c\x21\xf2\xb8\x0e\xef\x02\xbe\x3f\x77\x65\x2e\xbb\x6a\xa5\x07\xa1\x1c\x8f\x97\x60\x3d\xe4\x8b\xa1\x9e\xcf\x60\x3b\xe1\xfa\x7b\x68\x76\x74\xa7\xfc\xdc\x76\xf0\x72\x0b\x32\xf5\xf7\xd9\x3f\x01\x00\x00\xff\xff\x44\x3a\xa6\x8e\xe7\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2791, mode: os.FileMode(436), modTime: time.Unix(1457015031, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(436), modTime: time.Unix(1457015031, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x6d\x6f\xe2\x38\x10\xfe\xce\xaf\xb0\xfc\xe9\x4e\xe2\x38\xca\xbd\x48\x17\x9d\x56\xa2\x40\xab\x48\xbb\x5d\x54\xd8\xae\xb4\xab\x7e\x30\xf1\x80\xac\x0d\xb6\x65\x3b\x5d\xb5\x15\xff\x7d\xc7\x21\x09\x71\x42\xa0\xa5\x2f\x28\x64\x66\x9e\x79\xe6\xd5\x7e\x7d\x25\x1c\xd6\x42\x02\xa1\x16\xcc\x93\x48\x80\x92\xdd\xae\x47\xc8\x2b\xfe\x13\x42\xc7\x5f\x17\x4b\xd8\xea\x94\x39\xb8\x51\x66\xcb\xdc\x03\x18\x2b\x94\xa4\x24\x22\x74\x34\xbc\x1a\xfe\x31\xfc\x0f\xff\x68\x7f\xaf\x3e\x67\x86\x6d\xc1\xa1\x0e\x8d\x0a\x08\x0f\x92\xa6\x2a\x41\x04\xbe\x70\xca\xb0\x0d\xd4\x64\x28\x5d\x3e\x6b\xc8\xe1\xee\xb2\xed\x0a\x4c\x01\x95\x8b\xa6\xb0\x66\x59\xea\x72\xe9\xd5\x30\x94\xd8\xc4\x08\xed\x4a\x2a\x95\x0b\x62\xf7\x3e\x88\x15\x2f\x40\x7e\xbb\xbd\xfe\x9d\x16\x56\xbb\xd2\x9c\x4e\x99\x63\x2b\x66\xbb\x78\x2c\x9c\x11\x72\xd3\xc5\x83\x69\x7d\x8a\x48\xa1\x4a\x78\xe1\x83\x48\x4c\x48\x9b\x42\x2c\xad\x63\x32\x81\xdc\xe9\x25\x34\xf8\x6a\xe0\x46\x83\xad\x48\x8c\x3a\x45\xa7\xf4\x43\x92\x94\x59\x4b\xd6\xca\xd4\x98\x29\x0e\xb6\x4d\xed\x13\xba\x10\xe3\x6f\x17\xb1\x5a\xb3\x14\xd3\x7a\x82\x4f\x0e\xae\x53\x20\xec\x89\x89\x94\xad\x44\x2a\xdc\x33\x79\x51\xf2\x48\x8e\xe6\xc8\xf8\xa7\x32\xfc\x1d\x4c\x42\x67\x0b\xec\x68\x30\x44\x97\x38\x2d\x0f\x8b\x6c\x25\xc1\xd9\x23\x0e\xd0\xfa\xa3\xb0\xee\x7f\xec\xff\x28\x9a\x4d\x46\x51\xb4\xd7\x8d\xa2\x98\x7f\xe8\xf2\x89\x46\x0f\xf3\x09\xb1\x05\x6a\xcb\xdd\x17\x1c\xb1\xbc\x1d\x2e\x49\xad\x56\xd6\x6d\x0c\x16\xec\x7c\xc0\x59\xe9\xa7\xc5\xe0\x41\x27\xc7\x83\x3d\xc4\x89\x11\xf8\x20\x4f\xc7\x58\x21\xf7\x6a\xf8\xf4\x73\xe6\x74\x16\xa4\x93\xce\x95\x71\xff\xfc\xfd\xd7\x68\x99\xe8\x31\xe7\xc6\x8b\x10\x80\xa5\x19\xec\x1f\x6f\x64\x14\xdd\x82\x1b\x3b\x87\xdf\xbf\x1f\xfa\x95\xf6\x09\x9d\x49\xae\x95\x90\x6e\xe0\x2d\xc1\x5a\x4a\x1e\xc9\xae\xde\x1f\x07\x6c\xff\x78\x19\x76\x6e\xd9\x00\x9e\xc9\xa7\x79\x91\xed\xfa\xaa\x08\xc0\xef\x61\xed\x73\x51\xc9\xbb\x00\xea\x4d\x7c\x0c\xa0\x92\x77\x01\xd4\x9b\xe6\x18\x40\x25\xf7\x00\x41\x39\xee\xc1\xaa\xcc\x24\x10\x14\x64\x01\x49\x66\x70\xe6\x6e\x8d\xca\xf4\xb9\x5e\x08\x95\x6b\x1d\x31\x37\x4a\x83\x71\x02\xc2\xd9\x41\x49\xae\xda\x68\x98\xb2\x75\x49\x79\xc4\xf4\xeb\x16\x81\x93\x58\x6e\xf2\x52\x63\xc1\x6a\x3a\xc4\xc7\x1b\x6b\xf4\xea\x54\xa2\x52\x8f\xe9\x12\xed\xeb\x78\x63\xd4\xb6\x28\x3e\xf5\xbd\xe0\xdf\x2d\x55\xf3\xcd\x44\x70\x13\xfb\x68\xf1\x14\x19\xe4\xbf\x7f\x5e\xfd\x4b\x8b\x74\xed\x7f\x1e\x03\x4e\x38\x27\x31\x0f\xd2\xec\x27\xa7\x66\xb0\xeb\xd8\x25\xe7\xd2\x7a\x3f\xc5\x8f\xe9\x75\x5d\xf9\x4d\x69\x0d\x4c\xde\x97\xde\xdc\x2e\xe6\x36\x08\xa7\xdc\x7c\x27\x43\xaa\x06\xe6\x6c\x3c\x87\xd1\x7a\x4b\x30\xc7\xee\x03\x15\xb3\x96\xf0\x40\xa8\xc8\x44\xe9\x6c\xe2\x8f\xb4\xc0\x36\x38\x55\x3b\xed\x62\x0e\xd2\x89\xb5\x00\x13\x3a\xf6\xf1\x2c\x1c\x4b\x7e\xdc\xed\xc7\xa9\x61\x7e\x57\x0d\x61\x7b\xf6\xfb\x9d\xb5\x6a\x59\xd5\x4b\xdf\x30\x9c\xc9\x0d\xde\xc4\xe8\xf1\x65\xef\x4f\x66\x66\xf1\x6a\x15\x2e\x84\xf6\x16\xe8\x30\x09\x17\x51\x7b\xfb\x84\x66\x87\x3b\x40\xa5\x5b\xbe\x6b\xa8\x86\xb3\x16\x48\xb2\x55\x2a\x92\xf4\x79\x9c\xe0\x0e\xb2\x62\x95\xe6\xa1\x35\xaf\x08\xbe\x45\xf7\x95\x2e\x1b\x6b\xa3\x1b\x40\x78\xe0\x04\x4b\x22\x5f\x0f\xf5\x94\x06\x6b\x0a\xf7\xe0\x63\xbb\xa9\x7b\xe5\xe7\xae\x87\x77\x5e\x90\xdc\x5f\x73\x7f\x05\x00\x00\xff\xff\xa1\xdf\x66\x01\xfe\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2814, mode: os.FileMode(436), modTime: time.Unix(1457015031, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(436), modTime: time.Unix(1457015031, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(436), modTime: time.Unix(1457015031, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

